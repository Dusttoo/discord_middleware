{"version":3,"file":"main.js","mappings":"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","sources":["webpack://discord-bot-integration/webpack/bootstrap","webpack://discord-bot-integration/webpack/runtime/define property getters","webpack://discord-bot-integration/webpack/runtime/hasOwnProperty shorthand","webpack://discord-bot-integration/./scripts/utils/debuggingUtils.js","webpack://discord-bot-integration/./scripts/renderTemplates.js","webpack://discord-bot-integration/./scripts/utils/dataUtils.js","webpack://discord-bot-integration/./scripts/api.js","webpack://discord-bot-integration/./scripts/hooks.js","webpack://discord-bot-integration/./scripts/socket.js","webpack://discord-bot-integration/./scripts/index.js","webpack://discord-bot-integration/./scripts/settings.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { MODULE_NAME } from \"../index.js\";\nexport function debugLog(message, ...optionalParams) {\n  if (!game || !game.settings) {\n    console.warn(`[${MODULE_NAME} Debug] Game settings not available`);\n    return;\n  }\n  const debugMode = game.settings.get(MODULE_NAME, \"debugMode\");\n  if (debugMode) {\n    console.log(`[${MODULE_NAME} Debug] ${message}`, ...optionalParams);\n  } else {\n    console.log(\"[Discord Bot Integration] Debug mode is disabled.\");\n  }\n}\n","export async function renderCharacterStats(actor) {\n  const templatePath = \"modules/discord-bot-integration/templates/character-stats.html\";\n\n  const characterData = {\n    name: actor.name,\n    hp: actor.system.attributes.hp.value,\n    maxHp: actor.system.attributes.hp.max,\n    ac: actor.system.attributes.ac.value,\n    abilities: Object.entries(actor.system.abilities).map(([key, value]) => ({\n      name: key.toUpperCase(), \n      value: value.value,\n      mod: value.mod,\n      dc: value.dc\n    })),\n  };\n\n  const htmlContent = await renderTemplate(templatePath, characterData);\n  ChatMessage.create({ content: htmlContent, whisper: ChatMessage.getWhisperRecipients(\"GM\") });\n}\n  \n  export async function renderInventory(actor) {\n    const templatePath = \"modules/discord-bot-integration/templates/inventory.html\";\n    const inventoryData = {\n      inventory: actor.items.map(item => ({\n        name: item.name,\n        quantity: item.system.quantity || 1,\n        equipped: item.system.equipped || false,\n      })),\n    };\n    const htmlContent = await renderTemplate(templatePath, inventoryData);\n    ChatMessage.create({ content: htmlContent, whisper: ChatMessage.getWhisperRecipients(\"GM\") });\n  }\n  \n  export async function renderSpellDetails(actor, spellId) {\n    const spell = actor.items.get(spellId);\n    if (!spell || spell.type !== \"spell\") return;\n  \n    const templatePath = \"modules/discord-bot-integration/templates/spell-details.html\";\n    const spellData = {\n      name: spell.name,\n      level: spell.system.level,\n      description: spell.system.description.value,\n      uses: spell.system.uses,\n    };\n    const htmlContent = await renderTemplate(templatePath, spellData);\n    ChatMessage.create({ content: htmlContent, whisper: ChatMessage.getWhisperRecipients(\"GM\") });\n  }\n  \n  export async function renderTurnNotification(actor) {\n    const templatePath = \"modules/discord-bot-integration/templates/turn-notification.html\";\n    const turnData = {\n      combatantName: actor.name,\n      currentHp: actor.system.attributes.hp.value,\n      maxHp: actor.system.attributes.hp.max,\n      ac: actor.system.attributes.ac.value,\n    };\n    const htmlContent = await renderTemplate(templatePath, turnData);\n    ChatMessage.create({ content: htmlContent });\n  }","import { debugLog } from \"./debuggingUtils\";\nimport { MODULE_NAME } from \"..\";\nexport function findActorByNameOrId(identifier) {\n    debugLog(`${MODULE_NAME} | findActorByNameOrId:`, identifier);\n    let actor = game.actors.get(identifier);\n    debugLog(`${MODULE_NAME} | findActorByNameOrId:`, actor);\n    if (!actor) {\n        const matches = game.actors.filter(a => a.name.toLowerCase() === identifier.toLowerCase());\n        debugLog(`${MODULE_NAME} | findActorByNameOrId:`, matches);\n        if (matches.length === 1) {\n            actor = matches[0];\n        } else if (matches.length > 1) {\n            throw new Error(`Multiple characters found with the name '${identifier}'. Please use an ID.`);\n        }\n    }\n\n    return actor;\n}","import { sendToDiscord } from \"./socket\";\nimport { debugLog } from \"./utils/debuggingUtils\";\nimport { MODULE_NAME } from \"./index\";\nimport {\n  renderCharacterStats,\n  renderInventory,\n  renderSpellDetails,\n  renderTurnNotification,\n} from \"./renderTemplates\";\nimport { findActorByNameOrId } from \"./utils/dataUtils\";\ndebugLog(`${MODULE_NAME} setting up api...`);\n\nexport async function getCharacterStats(request) {\n  debugLog(`${MODULE_NAME} | getCharacterStats:`, request.actorId);\n\n  if (!game.ready) {\n    console.warn(\n      `${MODULE_NAME} | Game is not ready. Cannot access actors yet.`\n    );\n    return { error: \"Game is not ready. Please try again shortly.\" };\n  }\n\n  const actor = findActorByNameOrId(request.actorId);\n\n  if (!actor) {\n    debugLog(\n      `${MODULE_NAME} | Actor with ID ${request.actorId} not found`\n    );\n    console.warn(\n      `Actor with ID ${request.actorId} not found in game.actors`\n    );\n    return { error: `Actor with ID ${request.actorId} not found` };\n  }\n\n  const abilities = Object.keys(actor.system.abilities).reduce((acc, key) => {\n    acc[key] = {\n      value: actor.system.abilities[key].value,\n      mod: actor.system.abilities[key].mod,\n      dc: actor.system.abilities[key].dc,\n    };\n    return acc;\n  }, {});\n\n  const characterStats = {\n    name: actor.name,\n    hp: {\n      value: actor.system.attributes.hp.value,\n      max: actor.system.attributes.hp.max,\n      temp: actor.system.attributes.hp.temp || 0,\n    },\n    ac: actor.system.attributes.ac.value,\n    abilities: abilities,\n  };\n\n  await renderCharacterStats(actor);\n\n  return characterStats;\n}\n\nexport async function getCharacterInventory(request) {\n  debugLog(`${MODULE_NAME} | getCharacterInventory:`, request.actorId);\n  const actor = findActorByNameOrId(request.actorId);\n\n  if (!actor) {\n    debugLog(`${MODULE_NAME} | Actor with ID ${request.actorId} not found`);\n    console.warn(`Actor with ID ${request.actorId} not found`);\n    return [];\n  }\n\n  await renderInventory(actor);\n\n  debugLog(`${MODULE_NAME} | getCharacterInventory:`, actor.items);\n\n  return actor.items\n    .filter((item) =>\n      [\"loot\", \"equipment\", \"weapon\", \"consumable\", \"tool\"].includes(item.type)\n    )\n    .map((item) => ({\n      name: item.name,\n      quantity: item.system.quantity,\n      equipped: item.system.equipped,\n    }));\n}\n\nexport async function getCharacterSpells(request) {\n  debugLog(`${MODULE_NAME} | getCharacterSpells:`, request.actorId);\n  const actor = findActorByNameOrId(request.actorId);\n\n  if (!actor) {\n    debugLog(`${MODULE_NAME} | Actor with ID ${request.actorId} not found`);\n    console.warn(`Actor with ID ${request.actorId} not found`);\n    return [];\n  }\n\n  await renderSpellDetails(actor);\n  debugLog(`${MODULE_NAME} | getCharacterSpells:`, actor.items);\n  return actor.items\n    .filter((item) => item.type === \"spell\")\n    .map((spell) => ({\n      name: spell.name,\n      level: spell.system.level,\n      description: spell.system.description.value,\n      uses: spell.system.uses,\n    }));\n}\n\nexport function handleError(error) {\n  debugLog(`${MODULE_NAME} | API Error:`, error);\n  console.error(\"API Error:\", error);\n  return { success: false, message: error.message };\n}\n\nexport async function sendCharacterSpells(request, requestId) {\n  const actor = findActorByNameOrId(request.actorId);\n\n  if (!actor) {\n    debugLog(`${MODULE_NAME} | Actor with ID ${request.actorId} not found`);\n    console.warn(`Actor with ID ${request.actorId} not found`);\n    return;\n  }\n\n  const spells = actor.items\n    .filter((item) => item.type === \"spell\")\n    .map((spell) => ({\n      name: spell.name,\n      level: spell.system.level,\n      description: spell.system.description.value,\n      uses: spell.system.uses,\n    }));\n\n  debugLog(`${MODULE_NAME} | sendCharacterSpells:`, request.actorId, spells);\n\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"characterSpells\",\n    requestId,\n    spells,\n  });\n  return spells;\n}\n\nexport async function updateCharacterHP(request) {\n  const { actorId, hpChange, requestId } = request;\n  debugLog(`${MODULE_NAME} | updateCharacterHP:`, actorId, Number(hpChange));\n\n  try {\n    const actor = findActorByNameOrId(request.actorId);\n    if (!actor) {\n      debugLog(`${MODULE_NAME} | Actor with ID ${actorId} not found`);\n      console.warn(`Actor with ID ${actorId} not found`);\n      return;\n    }\n\n    const currentHP = actor.system.attributes.hp.value;\n    const newHP = Math.max(0, currentHP + Number(hpChange));\n\n    await actor.updateSource({ \"system.attributes.hp.value\": newHP });\n\n    if (actor.sheet?.rendered) {\n      actor.sheet.render(true);\n    }\n\n    await game.socket.emit(\"module.discord-bot-integration\", {\n      action: \"characterHPUpdated\",\n      requestId,\n      newHP,\n    });\n\n    return newHP;\n  } catch (error) {\n    console.error(\n      `${MODULE_NAME} | Error updating HP for actor ID ${actorId}:`,\n      error\n    );\n  }\n}\n\nexport async function updateCharacterCondition(request) {\n  const { actorId, condition, add, requestId } = request;\n  const actor = findActorByNameOrId(request.actorId);\n\n  if (!actor) {\n    debugLog(`${MODULE_NAME} | Actor with ID ${actorId} not found`);\n    console.warn(`Actor with ID ${actorId} not found`);\n    return;\n  }\n\n  try {\n    // Fetch current active effects\n    let existingEffects = actor.effects.map((effect) => effect.label);\n    const conditionExists = existingEffects.includes(condition);\n\n    if (add && !conditionExists) {\n      // Add the condition if not already present\n      await actor.createEmbeddedDocuments(\"ActiveEffect\", [\n        {\n          label: condition,\n          icon: getConditionIcon(condition), // Use helper function for flexible icon assignment\n          origin: actor.uuid, // Set origin for more context in the effect\n          \"flags.core.statusId\": condition, // Use status ID flag for consistent identification\n          disabled: false,\n        },\n      ]);\n    } else if (!add && conditionExists) {\n      // Remove the condition if it exists\n      const effect = actor.effects.find((e) => e.label === condition);\n      await effect.delete();\n    }\n\n    // Refresh effects list after modification\n    existingEffects = actor.effects.map((effect) => effect.label);\n\n    debugLog(\n      `${MODULE_NAME} | updateCharacterCondition:`,\n      actorId,\n      condition,\n      add\n    );\n\n    // Emit socket event for integration\n    game.socket.emit(`module.discord-bot-integration`, {\n      action: \"characterConditionUpdated\",\n      requestId,\n      condition,\n      status: add ? \"added\" : \"removed\",\n    });\n\n    return `${condition} ${add ? \"added\" : \"removed\"}`;\n  } catch (error) {\n    console.error(\n      `${MODULE_NAME} | Error updating condition for actor ID ${actorId}:`,\n      error\n    );\n    throw error;\n  }\n}\n\nfunction getConditionIcon(condition) {\n  const conditionIcons = {\n    Poisoned: \"icons/svg/status/poison.svg\",\n    Stunned: \"icons/svg/status/stun.svg\",\n    Blinded: \"icons/svg/status/blind.svg\",\n    // Add other conditions and their icons as needed\n  };\n  return conditionIcons[condition] || \"icons/svg/status/default.svg\"; // Fallback to a default icon\n}\n\nexport async function updateResource(request) {\n  const { actorId, resourceName, value, requestId } = request;\n  const actor = findActorByNameOrId(request.actorId);\n  if (!actor) {\n    debugLog(`${MODULE_NAME} | Actor with ID ${actorId} not found`);\n    console.warn(`Actor with ID ${actorId} not found`);\n    return;\n  }\n\n  const resources = actor.system.resources;\n  if (resources[resourceName]) {\n    await actor.update({ [`system.resources.${resourceName}.value`]: value });\n  } else {\n    console.warn(`Resource ${resourceName} not found for actor ${actorId}`);\n    return `Resource ${resourceName} not found for actor ${actorId}`;\n  }\n\n  debugLog(`${MODULE_NAME} | updateResource:`, actorId, resourceName, value);\n\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"characterResourceUpdated\",\n    requestId,\n    resourceName,\n    newValue: value,\n  });\n\n  return `${resourceName} updated to ${value}`;\n}\n\nexport async function addItemToInventory(request) {\n  const { actorId, itemData, requestId } = request;\n  const actor = findActorByNameOrId(request.actorId);\n\n  if (!actor) {\n    debugLog(`${MODULE_NAME} | Actor with ID ${actorId} not found`);\n    console.warn(`Actor with ID ${actorId} not found`);\n    return;\n  }\n\n  // Check for an existing item with the same name\n  const existingItem = actor.items.find((i) => i.name === itemData.name);\n\n  if (existingItem) {\n    // Stack quantity if the item already exists\n    const newQuantity =\n      (existingItem.system.quantity || 1) + (itemData.system.quantity || 1);\n    await existingItem.update({ \"system.quantity\": newQuantity });\n\n    debugLog(\n      `${MODULE_NAME} | Updated quantity of existing item:`,\n      existingItem.id,\n      newQuantity\n    );\n\n    game.socket.emit(`module.discord-bot-integration`, {\n      action: \"itemQuantityUpdated\",\n      requestId,\n      itemId: existingItem.id,\n      itemName: existingItem.name,\n      newQuantity,\n    });\n\n    return existingItem;\n  } else {\n    // Try adding a new item to the actor's inventory\n    try {\n      const createdItems = await actor.createEmbeddedDocuments(\"Item\", [itemData]);\n\n      if (createdItems.length > 0) {\n        const newItem = createdItems[0]; // Access the first item created\n\n        debugLog(`${MODULE_NAME} | addItemToInventory:`, actor.id, itemData, newItem);\n\n        game.socket.emit(`module.discord-bot-integration`, {\n          action: \"itemAddedToInventory\",\n          requestId,\n          itemId: newItem.id,\n          itemName: newItem.name,\n        });\n\n        return newItem;\n      } else {\n        console.warn(`${MODULE_NAME} | Failed to add item to inventory for actor ${actorId}`);\n        return null;\n      }\n    } catch (error) {\n      console.error(`Error adding item to inventory:`, error);\n      debugLog(`${MODULE_NAME} | Error adding item to inventory:`, error);\n      return null;\n    }\n  }\n}\n\nexport async function removeItemFromInventory(request) {\n  const { actorId, itemId, requestId, quantity = 1 } = request;\n  const actor = findActorByNameOrId(request.actorId);\n\n  if (!actor) {\n    debugLog(`${MODULE_NAME} | Actor with ID ${actorId} not found`);\n    console.warn(`Actor with ID ${actorId} not found`);\n    return;\n  }\n\n  const item = actor.items.get(itemId);\n  if (!item) {\n    console.warn(`Item with ID ${itemId} not found in inventory`);\n    return;\n  }\n\n  const currentQuantity = item.system.quantity || 1;\n\n  if (currentQuantity > quantity) {\n    const newQuantity = currentQuantity - quantity;\n    await item.update({ \"system.quantity\": newQuantity });\n    debugLog(`${MODULE_NAME} | Updated quantity of item:`, itemId, newQuantity);\n\n    game.socket.emit(`module.discord-bot-integration`, {\n      action: \"itemQuantityUpdated\",\n      requestId,\n      itemId,\n      itemName: item.name,\n      newQuantity,\n    });\n\n    return item;\n  } else {\n    await item.delete();\n    debugLog(`${MODULE_NAME} | removeItemFromInventory:`, actorId, itemId);\n\n    game.socket.emit(`module.discord-bot-integration`, {\n      action: \"itemRemovedFromInventory\",\n      requestId,\n      itemId,\n      itemName: item.name,\n    });\n\n    return `Item ${item.name} removed from inventory`;\n  }\n}\n\nexport async function getItemDetails(request) {\n  const { actorId, itemId, requestId } = request;\n  const actor = findActorByNameOrId(request.actorId);\n  if (!actor) {\n    debugLog(`${MODULE_NAME} | Actor with ID ${actorId} not found`);\n    console.warn(`Actor with ID ${actorId} not found`);\n    return;\n  }\n\n  const item = actor.items.get(itemId);\n  if (!item) {\n    console.warn(`Item with ID ${itemId} not found in inventory`);\n    return;\n  }\n\n  debugLog(`${MODULE_NAME} | getItemDetails:`, actorId, itemId);\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"itemDetails\",\n    requestId,\n    itemDetails: {\n      name: item.name,\n      description: item.system.description.value,\n      quantity: item.system.quantity,\n      weight: item.system.weight,\n      effects: item.system.effects,\n    },\n  });\n  return item;\n}\n\nexport async function rollInitiative(request) {\n  const { requestId, actorId } = request;\n  const actor = findActorByNameOrId(request.actorId);\n\n  if (!actor) {\n    debugLog(`${MODULE_NAME} | Actor with ID ${actorId} not found`);\n    console.warn(`Actor with ID ${actorId} not found`);\n    return;\n  }\n\n  // Ensure the actor is part of the combat\n  if (!game.combat) {\n    debugLog(`${MODULE_NAME} | No active combat encounter found`);\n    return `No active combat encounter found.`;\n  }\n\n  // Find or create a combatant for this actor in the current combat encounter\n  let combatant = game.combat.combatants.find((c) => c.actorId === actorId);\n  if (!combatant) {\n    try {\n      await game.combat.createEmbeddedDocuments(\"Combatant\", [{ actorId }]);\n      combatant = game.combat.combatants.find((c) => c.actorId === actorId);\n      debugLog(`${MODULE_NAME} | Combatant added:`, combatant);\n    } catch (error) {\n      console.error(`${MODULE_NAME} | Error adding combatant:`, error);\n      return `Failed to add ${actor.name} to combat.`;\n    }\n  }\n\n  // Roll initiative for the actor\n  await actor.rollInitiative();\n\n  // Retry mechanism to fetch updated initiative\n  let initiative = undefined;\n  let retries = 0;\n  while (initiative === undefined && retries < 5) {\n    await new Promise((resolve) => setTimeout(resolve, 100)); // Delay for 100ms\n    initiative = game.combat.combatants.find((c) => c.actorId === actorId)?.initiative;\n    retries++;\n  }\n\n  debugLog(\n    `${MODULE_NAME} | rollInitiative:`,\n    actorId,\n    initiative,\n    combatant?.id\n  );\n\n  // Emit socket event with the initiative result\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"initiativeRolled\",\n    requestId,\n    actorName: actor.name,\n    initiative: initiative,\n  });\n\n  return `Initiative rolled for ${actor.name} with result: ${initiative ?? \"unavailable\"}`;\n}\n\nexport async function sendTurnNotification(request) {\n  const { requestId } = request;\n  const combat = game.combats.active;\n  debugLog(`${MODULE_NAME} | sendTurnNotification - combat:`, game.combats);\n  if (!combat) {\n    debugLog(`${MODULE_NAME} | No active combat found`);\n    console.warn(\"No active combat found\");\n    return;\n  }\n  const currentCombatant = combat.combatant;\n  renderTurnNotification(currentCombatant.actor);\n  debugLog(\n    `${MODULE_NAME} | sendTurnNotification:`,\n    currentCombatant.actor.name\n  );\n  if (currentCombatant) {\n    game.socket.emit(`module.discord-bot-integration`, {\n      action: \"turnNotification\",\n      requestId,\n      combatantName: currentCombatant.actor.name,\n      combatantId: currentCombatant.actor.id,\n    });\n  }\n  return `Turn notification sent for ${currentCombatant.actor.name}`;\n}\n\nexport async function sendCombatSummary(requestId) {\n  const combat = game.combats.active;\n  if (!combat) {\n    debugLog(`${MODULE_NAME} | No active combat found`);\n    console.warn(\"No active combat found\");\n    return `No active combat found`;\n  }\n\n  const combatants = combat.combatants.map((combatant) => ({\n    name: combatant.actor.name,\n    initiative: combatant.initiative,\n    id: combatant.actor.id,\n  }));\n\n  debugLog(`${MODULE_NAME} | sendCombatSummary:`, combatants);\n\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"combatSummary\",\n    requestId,\n    combatants,\n  });\n\n  return combatants;\n}\n\nexport async function rollAttack(request) {\n  const { requestId, actorId, targetId } = request;\n  const attacker = findActorByNameOrId(request.actorId);\n  const target =findActorByNameOrId(targetId);\n\n  if (!attacker) {\n    console.warn(`Attacker with ID ${actorId} not found`);\n    return `Attacker with ID ${actorId} not found`;\n  }\n  if (!target) {\n    console.warn(`Target with ID ${targetId} not found`);\n    return `Target with ID ${targetId} not found`;\n  }\n\n  try {\n    const rollData = attacker.getRollData();\n    const attackFormula = `1d20 + @abilities.str.mod`;\n    const attackRoll = await new Roll(attackFormula, rollData).evaluate();\n    const targetAC = target.system.attributes.ac.value;\n    const isCritHit = attackRoll.total === 20;\n    const isCritMiss = attackRoll.total === 1;\n\n    let messageContent = `${attacker.name} rolls an attack of ${attackRoll.total} against ${target.name} (AC: ${targetAC}).`;\n\n    const baseDamageFormula = `1d8 + @abilities.str.mod`;\n    const damageFormula = isCritHit\n      ? `2 * (${baseDamageFormula})`\n      : baseDamageFormula;\n    const damageRoll = await new Roll(damageFormula, rollData).evaluate();\n    let finalDamage = Math.max(damageRoll.total, 1);\n\n    if (isCritHit) {\n      messageContent += ` Critical hit! ${attacker.name} deals ${finalDamage} damage to ${target.name}.`;\n\n      if (damageRoll) {\n        await damageRoll.toMessage({\n          speaker: ChatMessage.getSpeaker({ actor: attacker }),\n          flavor: `${attacker.name}'s critical hit damage!`,\n        });\n      }\n\n      // Apply damage to the target\n      const targetCurrentHP = target.system.attributes.hp.value;\n      const targetNewHP = Math.max(0, targetCurrentHP - finalDamage);\n      await target.update({ \"system.attributes.hp.value\": targetNewHP });\n\n      game.socket.emit(`module.discord-bot-integration`, {\n        action: \"attackResult\",\n        requestId,\n        actorName: attacker.name,\n        targetName: target.name,\n        attackTotal: attackRoll.total,\n        damageTotal: finalDamage,\n        isHit: true,\n        isCritHit: true,\n      });\n    } else if (isCritMiss) {\n      const fumbleEvent = getFumbleEvent();\n      messageContent += ` Critical miss! ${attacker.name} fumbles: ${fumbleEvent.message}`;\n\n      if (fumbleEvent.attackerDamage) {\n        const currentHP = attacker.system.attributes.hp.value;\n        const newHP = Math.max(0, currentHP - fumbleEvent.attackerDamage);\n        await attacker.update({ \"system.attributes.hp.value\": newHP });\n        messageContent += ` ${attacker.name} takes ${fumbleEvent.attackerDamage} damage due to the fumble.`;\n      }\n\n      game.socket.emit(`module.discord-bot-integration`, {\n        action: \"attackResult\",\n        requestId,\n        actorName: attacker.name,\n        targetName: target.name,\n        attackTotal: attackRoll.total,\n        isHit: false,\n        isCritMiss: true,\n        fumbleEvent: fumbleEvent.message,\n        attackerDamage: fumbleEvent.attackerDamage || 0,\n      });\n    } else {\n      const isHit = attackRoll.total >= targetAC;\n      if (isHit) {\n        messageContent += ` It's a hit! ${attacker.name} deals ${finalDamage} damage to ${target.name}.`;\n\n        if (damageRoll) {\n          await damageRoll.toMessage({\n            speaker: ChatMessage.getSpeaker({ actor: attacker }),\n            flavor: `${attacker.name} deals damage!`,\n          });\n        }\n\n        // Apply damage to the target\n        const targetCurrentHP = target.system.attributes.hp.value;\n        const targetNewHP = Math.max(0, targetCurrentHP - finalDamage);\n        await target.update({ \"system.attributes.hp.value\": targetNewHP });\n\n        game.socket.emit(`module.discord-bot-integration`, {\n          action: \"attackResult\",\n          requestId,\n          actorName: attacker.name,\n          targetName: target.name,\n          attackTotal: attackRoll.total,\n          damageTotal: finalDamage,\n          isHit,\n        });\n      } else {\n        messageContent += ` The attack misses!`;\n        game.socket.emit(`module.discord-bot-integration`, {\n          action: \"attackResult\",\n          requestId,\n          actorName: attacker.name,\n          targetName: target.name,\n          attackTotal: attackRoll.total,\n          isHit: false,\n        });\n      }\n    }\n\n    if (attackRoll) {\n      await attackRoll.toMessage({\n        speaker: ChatMessage.getSpeaker({ actor: attacker }),\n        flavor: messageContent,\n      });\n    }\n\n    return messageContent;\n  } catch (error) {\n    console.error(`Error during enhanced attack roll:`, error);\n    return `Error during attack roll: ${error.message}`;\n  }\n}\n\n// Enhanced fumble event structure\nfunction getFumbleEvent() {\n  const fumbleEvents = [\n    { message: \"You slip and fall prone.\", attackerDamage: 0 },\n    { message: \"You drop your weapon!\", attackerDamage: 0 },\n    {\n      message: \"You injure yourself slightly, taking 1 point of damage.\",\n      attackerDamage: 1,\n    },\n    { message: \"You swing wildly, hitting an ally nearby.\", attackerDamage: 0 },\n    {\n      message:\n        \"You are disoriented, and your next attack roll is at disadvantage.\",\n      attackerDamage: 0,\n    },\n  ];\n  return fumbleEvents[Math.floor(Math.random() * fumbleEvents.length)];\n}\n\nexport async function rollSavingThrow(request) {\n  const { requestId, saveType, actorId, dc } = request;\n  const actor = findActorByNameOrId(request.actorId);\n  if (!actor) {\n    console.warn(`Actor with ID ${actorId} not found`);\n    return `${MODULE_NAME} | Actor with ID ${actorId} not found`;\n  }\n\n  const rollData = actor.getRollData();\n  let saveBonus;\n  let formula;\n  let saveName;\n  \n  if (rollData.abilities[saveType]) {\n    saveBonus = rollData.abilities[saveType].save;\n    formula = `1d20 + ${saveBonus}`;\n    saveName = saveType.toUpperCase();\n  } else if (rollData.skills[saveType]) {\n    saveBonus = rollData.skills[saveType].total;\n    formula = `1d20 + ${saveBonus}`;\n    saveName = rollData.skills[saveType].ability.toUpperCase() + \" (\" + saveType + \")\";\n  } else {\n    console.warn(`Unknown save type: ${saveType}`);\n    return `${MODULE_NAME} | Unknown save type: ${saveType}`;\n  }\n\n  const roll = await new Roll(formula, rollData).evaluate({ async: true });\n  const isCritSuccess = roll.total === 20;\n  const isCritFailure = roll.total === 1;\n\n  let messageContent = `${actor.name} makes a ${saveName} saving throw. Result: ${roll.total}`;\n\n  // Determine success or failure if a DC is provided\n  let success = null;\n  if (dc !== undefined) {\n    success = roll.total >= dc;\n    messageContent += success\n      ? ` - Success! (DC: ${dc})`\n      : ` - Failure. (DC: ${dc})`;\n  }\n\n  // Add critical success/failure messaging\n  if (isCritSuccess) {\n    messageContent += \" **Critical Success!**\";\n  } else if (isCritFailure) {\n    messageContent += \" **Critical Failure!**\";\n  }\n\n  // Emit the result to Discord or frontend via socket with more detail\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"savingThrowResult\",\n    requestId,\n    actorName: actor.name,\n    saveType: saveName,\n    result: roll.total,\n    isCritSuccess,\n    isCritFailure,\n    dc,\n    success,\n  });\n\n  // Post the message to chat\n  await roll.toMessage({\n    speaker: ChatMessage.getSpeaker({ actor }),\n    flavor: messageContent,\n  });\n\n  return messageContent;\n}\n\nexport async function applyDamageOrHealing(request) {\n  const { requestId, actorId, amount } = request;\n  const actor = findActorByNameOrId(request.actorId);\n  if (!actor) {\n    console.warn(`${MODULE_NAME} | Actor with ID ${actorId} not found`);\n    return `${MODULE_NAME} | Actor with ID ${actorId} not found`;\n  }\n\n  const currentHP = actor.system.attributes.hp.value;\n  const maxHP = actor.system.attributes.hp.max;\n  let newHP;\n\n  let actionType;\n  if (amount < 0) {\n    actionType = \"damage\";\n    newHP = Math.max(0, currentHP + amount); \n  } else {\n    actionType = \"healing\";\n    newHP = Math.min(maxHP, currentHP + amount); \n  }\n\n  // Update actor's HP\n  await actor.update({ \"system.attributes.hp.value\": newHP });\n\n  // Log and emit the result\n  const changeType = actionType === \"damage\" ? \"Damage\" : \"Healing\";\n  console.log(`${MODULE_NAME} | ${changeType} applied: ${Math.abs(amount)}. New HP: ${newHP}`);\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"hpUpdated\",\n    requestId,\n    actorName: actor.name,\n    currentHP: newHP,\n    maxHP,\n    changeType: actionType,\n    changeAmount: Math.abs(amount),\n  });\n\n  // Display a message in Foundry VTT chat\n  const chatMessage = `${actor.name} ${actionType === \"damage\" ? \"takes\" : \"receives\"} ${Math.abs(amount)} ${actionType} and now has ${newHP}/${maxHP} HP.`;\n  await ChatMessage.create({\n    speaker: ChatMessage.getSpeaker({ actor }),\n    content: chatMessage,\n  });\n\n  return chatMessage;\n}\n\nexport async function rollOnTable(request) {\n  const { requestId, tableId } = request;\n  debugLog(`${MODULE_NAME} | rollOnTable:`, tableId);\n  const table = game.tables.get(tableId);\n  if (!table) {\n    debugLog(`${MODULE_NAME} | Table with ID ${tableId} not found`);\n    console.warn(`Table with ID ${tableId} not found`);\n    return;\n  }\n\n  const rollResult = await table.draw();\n  const resultText = rollResult.results.map((r) => r.getChatText()).join(\", \");\n\n  debugLog(`${MODULE_NAME} | rollOnTable:`, tableId, resultText);\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"tableRollResult\",\n    requestId,\n    tableName: table.name,\n    result: resultText,\n  });\n\n  return resultText;\n}\n\nexport async function generateRandomEncounter(request) {\n  const { requestId, encounterType } = request;\n  const encounters = {\n    forest: [\"Wolf\", \"Goblin Scout\", \"Bandit\"],\n    dungeon: [\"Skeleton\", \"Zombie\", \"Giant Spider\"],\n    town: [\"Thief\", \"Guard Patrol\", \"Pickpocket\"],\n  };\n\n  const encounterList = encounters[encounterType] || [];\n  const randomEncounter =\n    encounterList.length > 0\n      ? encounterList[Math.floor(Math.random() * encounterList.length)]\n      : \"Nothing found\";\n\n  debugLog(\n    `${MODULE_NAME} | generateRandomEncounter:`,\n    encounterType,\n    randomEncounter\n  );\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"randomEncounterResult\",\n    requestId,\n    encounterType,\n    encounter: randomEncounter,\n  });\n  return randomEncounter;\n}\n\nexport async function relayChatToDiscord(message, requestId) {\n  debugLog(`${MODULE_NAME} | Relaying message to Discord2: ${message}`);\n\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"chatRelayToDiscord\",\n    requestId,\n    message,\n  });\n}\n\nexport async function relayRPCommand(request) {\n  const { requestId, characterId, message } = request;\n  const character = findActorByNameOrId(characterId);\n  if (!character) {\n    debugLog(`${MODULE_NAME} | Character with ID ${characterId} not found`);\n    console.warn(`Character with ID ${characterId} not found`);\n    return;\n  }\n\n  const formattedMessage = `<strong>${character.name}</strong>: ${message}`;\n  ChatMessage.create({\n    content: formattedMessage,\n    speaker: { actor: character },\n  });\n\n  debugLog(`${MODULE_NAME} | Relaying message to Discord3: ${message}`);\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"rpCommandRelay\",\n    requestId,\n    characterName: character.name,\n    message,\n  });\n}\n\nexport async function castSpell(request) {\n  const { requestId, casterId, spellId, targetId } = request;\n  const caster = findActorByNameOrId(casterId);\n  debugLog(`${MODULE_NAME} | castSpell:`, casterId, spellId, targetId);\n\n  if (!caster) {\n    debugLog(`${MODULE_NAME} | Caster with ID ${casterId} not found`);\n    console.warn(`Caster with ID ${casterId} not found`);\n    return;\n  }\n\n  const spell = caster.items.get(spellId);\n  if (!spell || spell.type !== \"spell\") {\n    debugLog(\n      `${MODULE_NAME} | Spell with ID ${spellId} not found or is not a spell`\n    );\n    console.warn(`Spell with ID ${spellId} not found or is not a spell`);\n    return;\n  }\n\n  const target = findActorByNameOrId(targetId);\n  const spellDescription =\n    spell.system.description.value || \"No description available\";\n\n  ChatMessage.create({\n    content: `<strong>${caster.name}</strong> casts <strong>${spell.name}</strong> on <strong>${\n      target ? target.name : \"Unknown Target\"\n    }</strong><br>${spellDescription}`,\n    speaker: { actor: caster },\n  });\n\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"spellCastNotification\",\n    requestId,\n    casterName: caster.name,\n    spellName: spell.name,\n    targetName: target ? target.name : \"Unknown Target\",\n    description: spellDescription,\n  });\n\n  // Apply spell effects\n  await applySpellEffects(spell, caster, target);\n  return `${caster.name} casts ${spell.name} on ${target ? target.name : \"Unknown Target\"}`;\n}\n\nexport async function applySpellEffects(spell, caster, target) {\n  if (!target) return;\n\n  const spellEffects = spell.system.damage?.parts || [];\n  const healingEffect = spellEffects.find((part) => part[1] === \"healing\");\n  const damageEffect = spellEffects.find((part) => part[1] === \"damage\");\n\n  if (healingEffect) {\n    const healingAmount = calculateSpellEffect(healingEffect, caster);\n    await target.update({\n      \"system.attributes.hp.value\": Math.min(\n        target.system.attributes.hp.max,\n        target.system.attributes.hp.value + healingAmount\n      ),\n    });\n    debugLog(`${MODULE_NAME} | Healing applied: ${healingAmount}. New HP: ${target.system.attributes.hp.value}`);\n\n    game.socket.emit(`module.discord-bot-integration`, {\n      action: \"spellEffectApplied\",\n      casterName: caster.name,\n      effect: `heals ${target.name} for ${healingAmount} HP`,\n    });\n  }\n\n  if (damageEffect) {\n    const damageAmount = calculateSpellEffect(damageEffect, caster);\n    const savingThrow = spell.system.save?.dc ? await rollSavingThrow(target, spell.system.save.dc) : null;\n    const isSaveSuccessful = savingThrow && savingThrow.total >= spell.system.save.dc;\n\n    const finalDamage = isSaveSuccessful ? Math.floor(damageAmount / 2) : damageAmount;\n    await target.update({\n      \"system.attributes.hp.value\": Math.max(0, target.system.attributes.hp.value - finalDamage),\n    });\n\n    debugLog(`${MODULE_NAME} | Damage applied: ${finalDamage}. New HP: ${target.system.attributes.hp.value}`);\n    game.socket.emit(`module.discord-bot-integration`, {\n      action: \"spellEffectApplied\",\n      casterName: caster.name,\n      effect: `deals ${finalDamage} damage to ${target.name}${isSaveSuccessful ? \" (half due to successful save)\" : \"\"}`,\n    });\n\n    ChatMessage.create({\n      content: `${target.name} ${isSaveSuccessful ? \"saves partially\" : \"fails to save\"} against ${\n        spell.name\n      } and takes ${finalDamage} damage.`,\n    });\n  }\n\n  // Apply conditions if present\n  if (spell.system.duration && spell.system.duration.units === \"condition\") {\n    const condition = spell.system.duration.value;\n    target.createEmbeddedDocuments(\"ActiveEffect\", [\n      {\n        label: condition,\n        icon: spell.img,\n        origin: caster.uuid,\n        changes: [{ key: \"flags.conditions\", mode: 0, value: condition }],\n      },\n    ]);\n\n    debugLog(`${MODULE_NAME} | Condition applied: ${condition}`);\n    game.socket.emit(`module.discord-bot-integration`, {\n      action: \"conditionApplied\",\n      targetName: target.name,\n      condition,\n    });\n\n    ChatMessage.create({\n      content: `${target.name} is now affected by ${condition} from ${spell.name}.`,\n    });\n  }\n}\n\nfunction calculateSpellEffect(effect, caster) {\n  const [formula, type] = effect;\n  const roll = new Roll(formula, caster.getRollData()).evaluate({ async: false });\n  debugLog(`${MODULE_NAME} | Spell effect formula: ${formula}, type: ${type}, roll: ${roll.total}`);\n  return roll.total;\n}\n\nexport async function useAbility(request) {\n  const { casterId, abilityId, targetId, requestId } = request;\n  debugLog(`${MODULE_NAME} | useAbility:`, request);\n  const caster = findActorByNameOrId(casterId);\n  \n  if (!caster) {\n    debugLog(`${MODULE_NAME} | Caster with ID ${casterId} not found`);\n    console.warn(`Caster with ID ${casterId} not found`);\n    return;\n  }\n\n  const ability = caster.items.get(abilityId);\n  if (!ability || ability.type !== \"feat\") {\n    debugLog(\n      `${MODULE_NAME} | Ability with ID ${abilityId} not found or is not an ability`\n    );\n    console.warn(`Ability with ID ${abilityId} not found or is not an ability`);\n    return;\n  }\n\n  const target = findActorByNameOrId(targetId) || caster; // Use caster as fallback target\n  const abilityDescription = ability.system.description.value || \"No description available\";\n\n  const hasLimitedUses = ability.system.uses?.value > 0;\n  if (hasLimitedUses && ability.system.uses.value <= 0) {\n    const msg = `${caster.name} cannot use ${ability.name}, no charges left!`;\n    ChatMessage.create({ content: msg });\n    return msg;\n  }\n\n  ChatMessage.create({\n    content: `<strong>${caster.name}</strong> uses <strong>${\n      ability.name\n    }</strong> on <strong>${\n      target ? target.name : \"Unknown Target\"\n    }</strong><br>${abilityDescription}`,\n    speaker: { actor: caster },\n  });\n\n\n  await applyAbilityEffects(ability, caster, target);\n\n  if (hasLimitedUses) {\n    await ability.update({ \"system.uses.value\": ability.system.uses.value - 1 });\n  }\n\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"abilityUseNotification\",\n    requestId,\n    casterName: caster.name,\n    abilityName: ability.name,\n    targetName: target ? target.name : \"Unknown Target\",\n    description: abilityDescription,\n  });\n\n  debugLog(`${MODULE_NAME} | Ability used: ${ability.name} on ${target ? target.name : \"Unknown Target\"}`);\n  return `Ability used: ${ability.name} on ${target ? target.name : \"Unknown Target\"}`;\n}\n\nexport async function applyAbilityEffects(ability, caster, target) {\n  debugLog(`${MODULE_NAME} | applyAbilityEffects:`, ability, caster, target);\n  const healingEffect = ability.system.damage?.parts.find(\n    (part) => part[1] === \"healing\"\n  );\n  if (healingEffect) {\n    const healingAmount = calculateEffectValue(healingEffect, caster);\n    await target.update({\n      \"system.attributes.hp.value\": Math.min(\n        target.system.attributes.hp.max,\n        target.system.attributes.hp.value + healingAmount\n      ),\n    });\n    debugLog(`${MODULE_NAME} | Healing applied: ${healingAmount} HP to ${target.name}`);\n    ChatMessage.create({\n      content: `${target.name} is healed for ${healingAmount} HP by ${caster.name}'s ${ability.name}.`,\n    });\n  }\n\n  const damageEffect = ability.system.damage?.parts.find(\n    (part) => part[1] === \"damage\"\n  );\n  if (damageEffect) {\n    const damageAmount = calculateEffectValue(damageEffect, caster);\n    await target.update({\n      \"system.attributes.hp.value\": Math.max(\n        0,\n        target.system.attributes.hp.value - damageAmount\n      ),\n    });\n    debugLog(`${MODULE_NAME} | Damage applied: ${damageAmount} damage to ${target.name}`);\n    ChatMessage.create({\n      content: `${target.name} takes ${damageAmount} damage from ${caster.name}'s ${ability.name}.`,\n    });\n  }\n\n  const conditionEffect = ability.system.duration?.units === \"condition\";\n  if (conditionEffect) {\n    const condition = ability.system.duration.value;\n    await target.createEmbeddedDocuments(\"ActiveEffect\", [\n      {\n        label: condition,\n        icon: ability.img,\n        origin: caster.uuid,\n        changes: [{ key: \"flags.conditions\", mode: 0, value: condition }],\n      },\n    ]);\n    debugLog(`${MODULE_NAME} | Condition applied: ${condition} to ${target.name}`);\n    ChatMessage.create({\n      content: `${target.name} is affected by ${condition} from ${caster.name}'s ${ability.name}.`,\n    });\n  }\n}\n\nfunction calculateEffectValue(effect, caster) {\n  const [formula, type] = effect;\n  const roll = new Roll(formula, caster.getRollData()).evaluate({ async: false });\n  debugLog(`${MODULE_NAME} | Effect formula: ${formula}, type: ${type}, roll: ${roll.total}`);\n  return roll.total;\n}\n\nexport async function viewQuestLog(request) {\n  debugLog(`${MODULE_NAME} | viewQuestLog:`, request);\n  const requestId = request.id;\n  \n  // Retrieve all quests flagged as part of the quest log\n  const quests = game.journal.contents.filter((entry) => entry.flags.questLog === true);\n  \n  if (!quests.length) {\n    debugLog(`${MODULE_NAME} | viewQuestLog: No quests found.`);\n    game.socket.emit(`module.discord-bot-integration`, {\n      action: \"questLogResponse\",\n      requestId,\n      questLog: \"No quests available in the quest log.\",\n    });\n    return \"No quests available in the quest log.\";\n  }\n\n  const questData = quests.map((quest) => ({\n    title: quest.name,\n    content: quest.data.content,\n    status: quest.flags.status || \"In Progress\",\n    objectives: quest.flags.objectives || [],   // Array of quest objectives if available\n    rewards: quest.flags.rewards || \"Unknown\",  // Rewards if specified in flags\n    difficulty: quest.flags.difficulty || \"Normal\", // Difficulty if specified\n    questGiver: quest.flags.questGiver || \"Unknown\" // NPC quest-giver\n  }));\n\n  // Categorize quests by their status\n  const categorizedQuests = {\n    InProgress: questData.filter((q) => q.status === \"In Progress\"),\n    Completed: questData.filter((q) => q.status === \"Completed\"),\n    Failed: questData.filter((q) => q.status === \"Failed\"),\n  };\n\n  const formatQuestEntry = (quest) => {\n    const objectives = quest.objectives.length\n      ? quest.objectives.map((obj, idx) => `  ${idx + 1}. ${obj.description} (${obj.completed ? \"✓\" : \"✗\"})`).join(\"\\n\")\n      : \"No objectives listed.\";\n\n    return `**${quest.title}**\\nStatus: ${quest.status}\\nDifficulty: ${quest.difficulty}\\nQuest Giver: ${quest.questGiver}\\nRewards: ${quest.rewards}\\nObjectives:\\n${objectives}\\n\\n${quest.content}`;\n  };\n\n  // Construct the summary for each category and add section headers\n  const questSummary = [\n    `### **Quest Log** ###\\n`,\n    `--- In Progress ---\\n${categorizedQuests.InProgress.map(formatQuestEntry).join(\"\\n\\n---\\n\")}`,\n    `--- Completed ---\\n${categorizedQuests.Completed.map(formatQuestEntry).join(\"\\n\\n---\\n\")}`,\n    `--- Failed ---\\n${categorizedQuests.Failed.map(formatQuestEntry).join(\"\\n\\n---\\n\")}`,\n  ].join(\"\\n\\n\");\n\n  debugLog(`${MODULE_NAME} | viewQuestLogQuestSummary:`, questSummary);\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"questLogResponse\",\n    requestId,\n    questLog: questSummary,\n  });\n\n  return questData;\n}\n\nexport async function updateQuestStatus(request) {\n  debugLog(`${MODULE_NAME} | updateQuestStatus:`, request);\n  const { requestId, questId, newStatus } = request;\n  const quest = game.journal.get(questId);\n\n  if (!quest || !quest.flags.questLog) {\n    console.warn(`Quest with ID ${questId} not found or is not a quest log entry`);\n    return `Quest with ID ${questId} not found or is not part of the quest log.`;\n  }\n\n  // Update the quest status\n  const updatedFlags = {\n    ...quest.flags,\n    status: newStatus,\n  };\n  await quest.update({ flags: updatedFlags });\n\n  debugLog(`${MODULE_NAME} | Quest status updated:`, quest.name, newStatus);\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"questStatusUpdated\",\n    requestId,\n    questName: quest.name,\n    newStatus,\n  });\n\n  return `Quest \"${quest.name}\" status updated to \"${newStatus}\".`;\n}\n\nexport async function updateQuestObjective(request) {\n  const { requestId, questId, objectiveIndex } = request;\n  const quest = game.journal.get(questId);\n\n  if (!quest || !quest.flags.questLog) {\n    console.warn(`Quest with ID ${questId} not found or is not a quest log entry`);\n    return `Quest with ID ${questId} not found or is not part of the quest log.`;\n  }\n\n  const objectives = quest.flags.objectives || [];\n  if (objectiveIndex >= objectives.length || objectiveIndex < 0) {\n    console.warn(`Objective index ${objectiveIndex} is out of bounds`);\n    return `Objective index ${objectiveIndex} is out of bounds for quest \"${quest.name}\".`;\n  }\n\n  objectives[objectiveIndex].completed = true;\n  await quest.update({ \"flags.objectives\": objectives });\n\n  debugLog(`${MODULE_NAME} | Quest objective updated:`, quest.name, objectives[objectiveIndex].description);\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"questObjectiveUpdated\",\n    requestId,\n    questName: quest.name,\n    objective: objectives[objectiveIndex].description,\n  });\n\n  return `Objective \"${objectives[objectiveIndex].description}\" marked as completed in quest \"${quest.name}\".`;\n}\n\nexport async function addNoteToLog(request) {\n  debugLog(`${MODULE_NAME} | addNoteToLog:`, request);\n  const { questId, note, requestId } = request;\n  const quest = game.journal.get(questId);\n  if (!quest) {\n    debugLog(`${MODULE_NAME} | Quest with ID ${questId} not found`);\n    console.warn(`Quest with ID ${questId} not found`);\n    return `Quest with ID ${questId} not found.`;\n  }\n\n  const updatedContent = quest.data.content + `\\n\\n**Note:** ${note}`;\n\n  await quest.update({ content: updatedContent });\n\n  debugLog(`${MODULE_NAME} | addNoteToLog:`, quest, updatedContent);\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"noteAddedConfirmation\",\n    requestId,\n    questTitle: quest.name,\n    note,\n  });\n\n  return `Note \"${note}\" added to quest \"${quest.name}\".`;\n}\n\nexport async function queryNpcStats(request) {\n  debugLog(`${MODULE_NAME} | queryNpcStats:`, request);\n  const { npcId, requestId } = request;\n  const npc = findActorByNameOrId(npcId);\n  if (!npc) {\n    debugLog(`${MODULE_NAME} | NPC with ID ${npcId} not found`);\n    console.warn(`NPC with ID ${npcId} not found`);\n    return;\n  }\n\n  const npcStats = {\n    name: npc.name,\n    hp: npc.system.attributes.hp.value,\n    ac: npc.system.attributes.ac.value,\n    abilities: {\n      str: npc.system.abilities.str.value,\n      dex: npc.system.abilities.dex.value,\n      con: npc.system.abilities.con.value,\n      int: npc.system.abilities.int.value,\n      wis: npc.system.abilities.wis.value,\n      cha: npc.system.abilities.cha.value,\n    },\n  };\n\n  debugLog(`${MODULE_NAME} | queryNpcStats:`, npcStats);\n\n  const npcSummary = `\n  **${npcStats.name}**\\n\n  HP: ${npcStats.hp}, AC: ${npcStats.ac}\\n\n  STR: ${npcStats.abilities.str}, DEX: ${npcStats.abilities.dex}, CON: ${npcStats.abilities.con}\\n\n  INT: ${npcStats.abilities.int}, WIS: ${npcStats.abilities.wis}, CHA: ${npcStats.abilities.cha}\n  `;\n\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"npcStatsResponse\",\n    requestId,\n    npcSummary,\n  });\n\n  return npcStats\n}\n\nexport async function generateRandomNpc(request) {\n  const randomNpc = await createRandomNpc();\n  debugLog(`${MODULE_NAME} | generateRandomNpc:`, randomNpc);\n\n  const requestId = request.id;\n  const randomNpcSummary = `\n  **Name**: ${randomNpc.name}\\n\n  HP: ${randomNpc.hp}, AC: ${randomNpc.ac}\\n\n  Abilities: STR ${randomNpc.str}, DEX ${randomNpc.dex}, CON ${randomNpc.con}, INT ${randomNpc.int}, WIS ${randomNpc.wis}, CHA ${randomNpc.cha}\n  `;\n\n  debugLog(`${MODULE_NAME} | generateRandomNpcSummary:`, randomNpcSummary);\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"randomNpcResponse\",\n    requestId,\n    randomNpcSummary,\n  });\n\n  return randomNpc\n}\n\nexport async function createRandomNpc() {\n  const names = [\"Orc Warrior\", \"Goblin Shaman\", \"Bandit Leader\", \"Dire Wolf\"];\n  const name = names[Math.floor(Math.random() * names.length)];\n  const hp = Math.floor(Math.random() * 30) + 20;\n  const ac = Math.floor(Math.random() * 6) + 10;\n  const abilities = {\n    str: Math.floor(Math.random() * 8) + 10,\n    dex: Math.floor(Math.random() * 8) + 10,\n    con: Math.floor(Math.random() * 8) + 10,\n    int: Math.floor(Math.random() * 8) + 8,\n    wis: Math.floor(Math.random() * 8) + 8,\n    cha: Math.floor(Math.random() * 8) + 8,\n  };\n  debugLog(`${MODULE_NAME} | createRandomNpc:`, name, hp, ac, abilities);\n\n  return {\n    name,\n    hp,\n    ac,\n    ...abilities,\n  };\n}\n\nexport async function handleLongRest(request) {\n  const { characterId, requestId } = request;\n  const character = findActorByNameOrId(characterId);\n\n  if (!character) {\n    debugLog(`${MODULE_NAME} | Character with ID ${characterId} not found`);\n    console.warn(`Character with ID ${characterId} not found`);\n    return;\n  }\n\n  // Perform a long rest directly without showing the dialog\n  await character.longRest({ dialog: false, chat: false });\n\n  const restSummary = `\n  **${character.name} has completed a Long Rest**\\n\n  HP fully restored to ${character.system.attributes.hp.value}/${character.system.attributes.hp.max}\\n\n  All spell slots and abilities are refreshed.\n  `;\n\n  debugLog(`${MODULE_NAME} | handleLongRest:`, restSummary);\n\n  // Emit the rest summary to Discord or other integrated services\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"restNotification\",\n    requestId,\n    restSummary,\n  });\n\n  return restSummary;\n}\n\nexport async function handleShortRest(request) {\n  const { characterId, requestId } = request;\n  debugLog(`${MODULE_NAME} | handleShortRest:`, characterId, requestId);\n  const character = findActorByNameOrId(characterId);\n  if (!character) {\n    debugLog(`${MODULE_NAME} | Character with ID ${characterId} not found`);\n    console.warn(`Character with ID ${characterId} not found`);\n    return;\n  }\n\n  await character.shortRest({ dialog: false, chat: false });\n\n  const restSummary = `\n  **${character.name} has completed a Short Rest**\\n\n  HP partially restored based on hit dice. Check abilities and spells for partial recovery.\n  `;\n\n  debugLog(`${MODULE_NAME} | handleShortRest:`, restSummary);\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"restNotification\",\n    requestId,\n    restSummary,\n  });\n\n  return restSummary\n}\n\nexport async function handleSessionStart(request) {\n  const { sessionData, requestId } = request;\n  const { sessionTitle, participants } = sessionData;\n  const startTime = new Date().toLocaleString();\n\n  debugLog(\n    `${MODULE_NAME} | handleSessionStart:`,\n    sessionTitle,\n    startTime,\n    participants\n  );\n  const startMessage = `\n  **Session Started: ${sessionTitle}**\n  Start Time: ${startTime}\n  Participants: ${participants.join(\", \")}\n  Good luck and enjoy the adventure!\n    `;\n\n  debugLog(`${MODULE_NAME} | startMessage:`, startMessage);\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"sessionNotification\",\n    requestId,\n    message: startMessage,\n    type: \"startSession\",\n  });\n  return startMessage\n}\n\nexport async function handleSessionEnd(request) {\n  debugLog(`${MODULE_NAME} | handleSessionEnd:`, request);\n  const { sessionData, requestId } = request;\n  const { sessionTitle } = sessionData;\n  const endTime = new Date().toLocaleString();\n\n  debugLog(`${MODULE_NAME} | handleSessionEnd:`, sessionTitle, endTime);\n  const endMessage = `\n  **Session Ended: ${sessionTitle}**\n  End Time: ${endTime}\n  Thank you for playing. See you next time!\n    `;\n\n  debugLog(`${MODULE_NAME} | endMessage:`, endMessage);\n\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"sessionNotification\",\n    requestId,\n    message: endMessage,\n    type: \"endSession\",\n  });\n  return endMessage\n}\n\nexport async function handleLogSessionNotes(request) {\n  const { logData, requestId } = request;\n  const { sessionTitle, notes } = logData;\n\n  debugLog(`${MODULE_NAME} | handleLogSessionNotes:`, sessionTitle, notes);\n  const notesMessage = `\n  **Session Notes for ${sessionTitle}:**\n  ${notes}\n    `;\n\n  debugLog(`${MODULE_NAME} | notesMessage:`, notesMessage);\n  game.socket.emit(`module.discord-bot-integration`, {\n    action: \"sessionNotification\",\n    requestId,\n    message: notesMessage,\n    type: \"sessionLog\",\n  });\n  return notesMessage\n}\n","import { MODULE_NAME } from \"./index.js\";\nimport { debugLog } from \"./utils/debuggingUtils\";\ndebugLog(`[Discord Bot Integration] Hooks module loading...`);\nexport function registerHooks() {\n  \n    Hooks.on(\"updateActor\", (actor, data, options, userId) => {\n      debugLog(`${MODULE_NAME} | Actor updated: ${actor.name}`);\n      game.socket.emit(`module.${MODULE_NAME}`, {\n        action: \"actorUpdated\",\n        actorId: actor.id,\n        actorData: actor.toJSON(),\n      });\n    });\n  \n    Hooks.on(\"createItem\", (item, options, userId) => {\n      debugLog(`${MODULE_NAME} | Item created: ${item.name}`);\n      const actor = item.parent;\n      if (actor) {\n        debugLog(`${MODULE_NAME} | Item added to ${actor.name}'s inventory: ${item.name}`);\n        game.socket.emit(`module.${MODULE_NAME}`, {\n          action: \"itemAdded\",\n          actorId: actor.id,\n          itemData: item.toJSON(),\n        });\n      }\n    });\n  \n    Hooks.on(\"deleteItem\", (item, options, userId) => {\n      debugLog(`${MODULE_NAME} | Item deleted: ${item.name}`);\n      const actor = item.parent;\n      if (actor) {\n        debugLog(`${MODULE_NAME} | Item removed from ${actor.name}'s inventory: ${item.name}`);\n        game.socket.emit(`module.${MODULE_NAME}`, {\n          action: \"itemRemoved\",\n          actorId: actor.id,\n          itemId: item.id,\n        });\n      }\n    });\n  \n    Hooks.on(\"updateCombat\", (combat, data, options, userId) => {\n      const combatantsData = combat.combatants.map((combatant) => ({\n        id: combatant.id,\n        name: combatant.name,\n        initiative: combatant.initiative,\n        hp: combatant.actor?.system.attributes.hp.value, \n        statusEffects: combatant.actor?.effects.map(effect => effect.label), \n      }));\n      debugLog(`${MODULE_NAME} | Combat updated: Combat ID ${combat.id}`);\n      const currentCombatant = combat.combatant.actor.name;\n      game.socket.emit(`module.${MODULE_NAME}`, {\n        action: \"combatUpdated\",\n        combatId: combat.id,\n        round: combat.round,\n        turn: combat.turn,\n        combatants: combatantsData,\n        currentCombatant\n      });\n    });\n    \n    Hooks.on(\"combatTurn\", (combat) => {\n      const currentCombatant = combat.combatant;\n      if (currentCombatant) {\n        debugLog(`${MODULE_NAME} | Turn notification for: ${currentCombatant.actor.name}`);\n        \n        game.socket.emit(`module.${MODULE_NAME}`, {\n          action: \"turnNotification\",\n          combatantName: currentCombatant.actor.name,\n          combatantId: currentCombatant.actor.id,\n          initiative: currentCombatant.initiative,\n          round: combat.round,\n          turn: combat.turn,\n        });\n      }\n    });\n  \n    Hooks.on(\"createChatMessage\", (chatMessage, options, userId) => {\n      const message = chatMessage.system.content; \n      debugLog(`${MODULE_NAME} | Relaying message to Discord1: ${message}`);\n      game.socket.emit(`module.${MODULE_NAME}`, {\n        action: \"chatRelayToDiscord\",\n        message,\n      });\n    });\n  \n    Hooks.on(\"useItem\", (item, options) => {\n      debugLog(`${MODULE_NAME} | Item used: ${item.name}`);\n      const actor = item.actor;\n      if (actor && (item.type === \"spell\" || item.type === \"feat\")) {\n        debugLog(`${MODULE_NAME} | Spell or ability used: ${item.name}`);\n        game.socket.emit(`module.${MODULE_NAME}`, {\n          action: item.type === \"spell\" ? \"spellUsed\" : \"abilityUsed\",\n          casterName: actor.name,\n          itemName: item.name,\n          description: item.data.data.description.value,\n        });\n      }\n    });\n  \n    Hooks.on(\"restComplete\", (actor, restData) => {\n      debugLog(`${MODULE_NAME} | Rest completed: ${actor.name}`);\n      const restType = restData.longRest ? \"longRest\" : \"shortRest\";\n      debugLog(`${MODULE_NAME} | ${actor.name} completed a ${restType}`);\n      game.socket.emit(`module.${MODULE_NAME}`, {\n        action: restType,\n        actorId: actor.id,\n        actorName: actor.name,\n      });\n    });\n\n  debugLog(`${MODULE_NAME} hooks registered`);\n\n  }","import { debugLog } from \"./utils/debuggingUtils\";\nimport { MODULE_NAME } from \"./index.js\";\nimport * as socket from \"./api.js\";\n\nexport class SocketHandler {\n  constructor() {\n    this.functions = new Map();\n    this.requests = new Map();\n    this.name = `module.${MODULE_NAME}`;\n    console.log(`${MODULE_NAME} this.name:`, this.name);\n\n    game.socket.on(this.name, this._received.bind(this));\n\n    this.register(\"updateCharacterHP\", socket.updateCharacterHP);\n    this.register(\"rollInitiative\", socket.rollInitiative);\n    this.register(\"castSpell\", socket.castSpell);\n    this.register(\"getCharacterStats\", socket.getCharacterStats);\n    this.register(\"getCharacterInventory\", socket.getCharacterInventory);\n    this.register(\"getCharacterSpells\", socket.getCharacterSpells);\n    this.register(\"rollAttack\", socket.rollAttack);\n    this.register(\"applyDamageOrHealing\", socket.applyDamageOrHealing);\n    this.register(\"rollSavingThrow\", socket.rollSavingThrow);\n    this.register(\"handleLongRest\", socket.handleLongRest);\n    this.register(\"handleShortRest\", socket.handleShortRest);\n    this.register(\"sendCharacterSpells\", socket.sendCharacterSpells);\n    this.register(\"updateCharacterCondition\", socket.updateCharacterCondition);\n    this.register(\"updateResource\", socket.updateResource);\n    this.register(\"addItemToInventory\", socket.addItemToInventory);\n    this.register(\"removeItemFromInventory\", socket.removeItemFromInventory);\n    this.register(\"getItemDetails\", socket.getItemDetails);\n    this.register(\"sendTurnNotification\", socket.sendTurnNotification);\n    this.register(\"sendCombatSummary\", socket.sendCombatSummary);\n    this.register(\"rollOnTable\", socket.rollOnTable);\n    this.register(\"generateRandomEncounter\", socket.generateRandomEncounter);\n    this.register(\"relayChatToDiscord\", socket.relayChatToDiscord);\n    this.register(\"relayRPCommand\", socket.relayRPCommand);\n    this.register(\"useAbility\", socket.useAbility);\n    this.register(\"viewQuestLog\", socket.viewQuestLog);\n    this.register(\"addNoteToLog\", socket.addNoteToLog);\n    this.register(\"queryNpcStats\", socket.queryNpcStats);\n    this.register(\"generateRandomNpc\", socket.generateRandomNpc);\n    this.register(\"handleSessionStart\", socket.handleSessionStart);\n    this.register(\"handleSessionEnd\", socket.handleSessionEnd);\n    this.register(\"handleLogSessionNotes\", socket.handleLogSessionNotes);\n    this.register(\"updateQuestStatus\", socket.updateQuestStatus);\n    this.register(\"updateQuestObjective\", socket.updateQuestObjective);\n  }\n\n  register(name, func) {\n    if (this.functions.has(name)) {\n      debugLog(`${MODULE_NAME} | Function '${name}' is already registered, skipping duplicate.`);\n    } else {\n      debugLog(`${MODULE_NAME} | Registering function '${name}'...`);\n      this.functions.set(name, func);\n    }\n  }\n\n  async _receiveRequest(message, senderId) {\n    const { action, requestId, ...payload } = message;\n    const func = this.functions.get(action);\n  \n    if (!func) {\n      debugLog(`${MODULE_NAME} | No function registered for action '${action}'`);\n      return;\n    }\n  \n    try {\n      const result = await func(payload);\n      debugLog(`Success executing '${action}':`, result);\n  \n      game.socket.emit(this.name, {\n        action: `${action}Result`,\n        requestId,  \n        type: \"RESPONSE\",  \n        result,  \n      });\n    } catch (error) {\n      debugLog(`${MODULE_NAME} | Error executing '${action}':`, error);\n      game.socket.emit(this.name, {\n        action: `${action}Result`,\n        requestId,\n        type: \"RESPONSE\",\n        error: error.message,  \n      });\n    }\n  }\n\n  _receiveResponse(message, senderId) {\n    const { id, result, type } = message;\n    const request = this.requests.get(id);\n    if (!request) return;\n\n    if (type === \"RESULT\") {\n      debugLog(`${MODULE_NAME} | Success executing '${request.functionName}':`, result);\n      request.resolve(result);\n    } else {\n      debugLog(`${MODULE_NAME} | Error executing '${request.functionName}':`, result);\n      request.reject(new Error(`Error executing '${request.functionName}'. Check GM console for details.`));\n    }\n    this.requests.delete(id);\n  }\n\n  _received(message, senderId) {\n    if (message.type === \"REQUEST\") {\n      debugLog(`${MODULE_NAME} | Received request:`, message);\n      this._receiveRequest(message, senderId);\n    } else {\n      debugLog(`${MODULE_NAME} | Received response:`, message);\n      this._receiveResponse(message, senderId);\n    }\n  }\n\n  _sendRequest(functionName, args, recipient) {\n    const message = { functionName, args, recipient, type: \"REQUEST\", id: foundry.utils.randomID() };\n    const promise = new Promise((resolve, reject) => this.requests.set(message.id, { functionName, resolve, reject }));\n\n    debugLog(`${MODULE_NAME} | Sending request:`, message);\n    game.socket.emit(this.name, message);\n    return promise;\n  }\n\n  async executeAsGM(functionName, ...args) {\n    const func = this.functions.get(functionName);\n    if (game.user.isGM) return func(...args);\n    debugLog(`${MODULE_NAME} | Executing '${functionName}' as GM:`, args);\n    return this._sendRequest(functionName, args, \"GM\");\n  }\n}\n\nexport function setupSocket() {\n  globalThis.SocketHandler = new SocketHandler();\n  debugLog(`${MODULE_NAME} | Socket setup complete`);\n}","export const MODULE_NAME = \"discord-bot-integration\";\nconsole.log(`${MODULE_NAME} module loading...`);\n\nimport { registerHooks } from \"./hooks.js\";\nimport { setupSocket } from \"./socket.js\";\nimport { registerSettings } from \"./settings.js\";\n\nHooks.once(\"init\", async () => {\n  console.log(`${MODULE_NAME} | Initializing module`);\n\n  registerSettings();\n});\n\nHooks.once(\"ready\", () => {\n  console.log(`${MODULE_NAME} | Foundry ready, setting up hooks and socket`);\n\n  registerHooks();\n\n  setupSocket();\n});","export function registerSettings() {\n  game.settings.register(\"discord-bot-integration\", \"useEnv\", {\n    name: \"Use .env for Development\",\n    hint: \"Enable to load environment variables from a .env file during development.\",\n    scope: \"world\",\n    config: true,\n    type: Boolean,\n    default: false,\n  });\n\n  game.settings.register(\"discord-bot-integration\", \"discordApiToken\", {\n    name: \"Discord API Token\",\n    hint: \"Enter the Discord API token for the bot (required for production).\",\n    scope: \"world\",\n    config: true,\n    type: String,\n    default: \"\",\n  });\n\n  game.settings.register(\"discord-bot-integration\", \"middlewareUrl\", {\n    name: \"Middleware URL\",\n    hint: \"The URL for your FastAPI middleware that connects to Discord.\",\n    scope: \"world\",\n    config: true,\n    type: String,\n    default: \"http://localhost:8000\",\n  });\n\n  game.settings.register(\"discord-bot-integration\", \"debugMode\", {\n    name: \"Enable Debug Mode\",\n    hint: \"Enable verbose logging for debugging purposes.\",\n    scope: \"world\",\n    config: true,\n    type: Boolean,\n    default: false,\n  });\n\n  game.settings.register(\"discord-bot-integration\", \"notificationChannel\", {\n    name: \"Discord Notification Channel ID\",\n    hint: \"ID of the Discord channel where notifications will be sent.\",\n    scope: \"world\",\n    config: true,\n    type: String,\n    default: \"\",\n  });\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","debugLog","message","game","settings","MODULE_NAME","_console","_len","arguments","length","optionalParams","Array","_key","console","log","apply","concat","warn","_regeneratorRuntime","e","t","r","n","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_arrayLikeToArray","asyncGeneratorStep","_asyncToGenerator","_next","_throw","renderCharacterStats","_x","_renderCharacterStats","_callee","actor","characterData","htmlContent","_context","hp","system","attributes","maxHp","max","ac","abilities","entries","map","_ref","_ref2","isArray","_arrayWithHoles","_iterableToArrayLimit","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","toUpperCase","mod","dc","renderTemplate","ChatMessage","content","whisper","getWhisperRecipients","renderInventory","_x2","_renderInventory","_callee2","inventoryData","_context2","inventory","items","item","quantity","equipped","renderSpellDetails","_x3","_x4","_renderSpellDetails","_callee3","spellId","spell","spellData","_context3","level","description","uses","renderTurnNotification","_x5","_renderTurnNotification","_callee4","turnData","_context4","combatantName","currentHp","findActorByNameOrId","identifier","actors","matches","filter","toLowerCase","_slicedToArray","getCharacterStats","_getCharacterStats","request","characterStats","actorId","ready","error","reduce","acc","temp","getCharacterInventory","_getCharacterInventory","includes","getCharacterSpells","_getCharacterSpells","sendCharacterSpells","_sendCharacterSpells","requestId","spells","socket","emit","action","updateCharacterHP","_x6","_updateCharacterHP","_callee5","hpChange","_actor$sheet","currentHP","newHP","_context5","Number","Math","updateSource","sheet","rendered","render","t0","updateCharacterCondition","_x7","_updateCharacterCondition","_callee6","condition","add","existingEffects","conditionExists","effect","_context6","effects","label","createEmbeddedDocuments","icon","getConditionIcon","origin","uuid","disabled","find","status","Poisoned","Stunned","Blinded","updateResource","_x8","_updateResource","_callee7","resourceName","_context7","resources","update","_defineProperty","newValue","addItemToInventory","_x9","_addItemToInventory","_callee8","itemData","existingItem","newQuantity","createdItems","newItem","_context8","id","itemId","itemName","removeItemFromInventory","_x10","_removeItemFromInventory","_callee9","_request$quantity","currentQuantity","_context9","getItemDetails","_x11","_getItemDetails","_callee10","_context10","itemDetails","weight","rollInitiative","_x12","_rollInitiative","_callee11","_combatant","_initiative","combatant","initiative","retries","_game$combat$combatan","_context11","combat","combatants","undefined","setTimeout","actorName","sendTurnNotification","_x13","_sendTurnNotification","_callee12","currentCombatant","_context12","combats","active","combatantId","sendCombatSummary","_x14","_sendCombatSummary","_callee13","_context13","rollAttack","_x15","_rollAttack","_callee14","targetId","attacker","target","rollData","attackRoll","targetAC","isCritHit","isCritMiss","messageContent","baseDamageFormula","damageFormula","damageRoll","finalDamage","targetCurrentHP","targetNewHP","fumbleEvent","isHit","_targetCurrentHP","_targetNewHP","_context14","getRollData","Roll","evaluate","total","toMessage","speaker","getSpeaker","flavor","targetName","attackTotal","damageTotal","fumbleEvents","attackerDamage","floor","random","rollSavingThrow","_x16","_rollSavingThrow","_callee15","saveType","saveBonus","formula","saveName","roll","isCritSuccess","isCritFailure","success","_context15","save","skills","ability","result","applyDamageOrHealing","_x17","_applyDamageOrHealing","_callee16","amount","maxHP","actionType","changeType","chatMessage","_context16","min","abs","changeAmount","rollOnTable","_x18","_rollOnTable","_callee17","tableId","table","rollResult","resultText","_context17","tables","draw","results","getChatText","join","tableName","generateRandomEncounter","_x19","_generateRandomEncounter","_callee18","encounterType","encounterList","randomEncounter","_context18","forest","dungeon","town","encounter","relayChatToDiscord","_x20","_x21","_relayChatToDiscord","_callee19","_context19","relayRPCommand","_x22","_relayRPCommand","_callee20","characterId","character","formattedMessage","_context20","characterName","castSpell","_x23","_castSpell","_callee21","casterId","caster","spellDescription","_context21","casterName","spellName","applySpellEffects","_x24","_x25","_x26","_applySpellEffects","_callee22","_spell$system$damage","spellEffects","healingEffect","damageEffect","healingAmount","_spell$system$save","damageAmount","savingThrow","isSaveSuccessful","_context22","damage","parts","part","calculateSpellEffect","duration","units","img","changes","mode","_effect","useAbility","_x27","_useAbility","_callee23","_ability$system$uses","abilityId","abilityDescription","hasLimitedUses","msg","_context23","applyAbilityEffects","abilityName","_x28","_x29","_x30","_applyAbilityEffects","_callee24","_ability$system$damag","_ability$system$damag2","_ability$system$durat","_context24","calculateEffectValue","_effect2","viewQuestLog","_x31","_viewQuestLog","_callee25","quests","questData","categorizedQuests","formatQuestEntry","questSummary","_context25","journal","contents","entry","flags","questLog","quest","title","data","objectives","rewards","difficulty","questGiver","InProgress","q","Completed","Failed","idx","completed","updateQuestStatus","_x32","_updateQuestStatus","_callee26","questId","newStatus","updatedFlags","_context26","_objectSpread","questName","updateQuestObjective","_x33","_updateQuestObjective","_callee27","objectiveIndex","_context27","objective","addNoteToLog","_x34","_addNoteToLog","_callee28","note","updatedContent","_context28","questTitle","queryNpcStats","_x35","_queryNpcStats","_callee29","npcId","npc","npcStats","npcSummary","_context29","str","dex","con","int","wis","cha","generateRandomNpc","_x36","_generateRandomNpc","_callee30","randomNpc","randomNpcSummary","_context30","createRandomNpc","_createRandomNpc","_callee31","names","_context31","handleLongRest","_x37","_handleLongRest","_callee32","restSummary","_context32","longRest","dialog","chat","handleShortRest","_x38","_handleShortRest","_callee33","_context33","shortRest","handleSessionStart","_x39","_handleSessionStart","_callee34","sessionData","sessionTitle","participants","startTime","startMessage","_context34","Date","toLocaleString","handleSessionEnd","_x40","_handleSessionEnd","_callee35","endTime","endMessage","_context35","handleLogSessionNotes","_x41","_handleLogSessionNotes","_callee36","logData","notes","notesMessage","_context36","_objectWithoutProperties","_objectWithoutPropertiesLoose","getOwnPropertySymbols","propertyIsEnumerable","_defineProperties","_toPropertyKey","toPrimitive","String","_toPrimitive","SocketHandler","_classCallCheck","this","functions","Map","requests","on","_received","bind","register","func","has","set","_receiveRequest2","senderId","payload","_excluded","functionName","reject","_receiveRequest","_receiveResponse","args","recipient","_this","foundry","utils","randomID","promise","_executeAsGM","_args2","user","isGM","_sendRequest","Hooks","once","hint","scope","config","Boolean","default","options","userId","actorData","toJSON","parent","combatantsData","_combatant$actor","_combatant$actor2","statusEffects","combatId","round","turn","restData","restType","globalThis"],"sourceRoot":""}